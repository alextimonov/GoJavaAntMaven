<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Suite #1" duration-ms="1850" started-at="2016-06-23T16:10:20Z" finished-at="2016-06-23T16:10:22Z">
    <groups>
    </groups>
    <test name="Integer Task Test" duration-ms="1850" started-at="2016-06-23T16:10:20Z" finished-at="2016-06-23T16:10:22Z">
      <class name="ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest">
        <test-method status="PASS" signature="testGetSquareSumBorder()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumBorder" duration-ms="245" started-at="2016-06-23T19:10:20Z" finished-at="2016-06-23T19:10:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumBorder -->
        <test-method status="PASS" signature="testGetSquareSumDivisionElementsOnThreads_1()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumDivisionElementsOnThreads_1" duration-ms="204" started-at="2016-06-23T19:10:20Z" finished-at="2016-06-23T19:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumDivisionElementsOnThreads_1 -->
        <test-method status="PASS" signature="testGetSquareSumDivisionElementsOnThreads_2()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumDivisionElementsOnThreads_2" duration-ms="202" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumDivisionElementsOnThreads_2 -->
        <test-method status="PASS" signature="testGetSquareSumDivisionElementsOnThreads_3()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumDivisionElementsOnThreads_3" duration-ms="202" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumDivisionElementsOnThreads_3 -->
        <test-method status="PASS" signature="testGetSquareSumExpectedIllegalArgumentException_1()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumExpectedIllegalArgumentException_1" duration-ms="1" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Array with values should contain elements!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Array with values should contain elements!
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.validateArguments(Unknown Source)
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.getSquareSum(Unknown Source)
	at ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest.testGetSquareSumExpectedIllegalArgumentException_1(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumExpectedIllegalArgumentException_1 -->
        <test-method status="PASS" signature="testGetSquareSumExpectedIllegalArgumentException_2()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumExpectedIllegalArgumentException_2" duration-ms="0" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number of threads should be positive!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number of threads should be positive!
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.validateArguments(Unknown Source)
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.getSquareSum(Unknown Source)
	at ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest.testGetSquareSumExpectedIllegalArgumentException_2(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumExpectedIllegalArgumentException_2 -->
        <test-method status="PASS" signature="testGetSquareSumExpectedIllegalArgumentException_3()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumExpectedIllegalArgumentException_3" duration-ms="0" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number of threads should be positive!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number of threads should be positive!
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.validateArguments(Unknown Source)
	at ua.goit.timonov.antMaven.module032.PhaserSquareSum.getSquareSum(Unknown Source)
	at ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest.testGetSquareSumExpectedIllegalArgumentException_3(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumExpectedIllegalArgumentException_3 -->
        <test-method status="PASS" signature="testGetSquareSumNormalBorder_1()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumNormalBorder_1" duration-ms="203" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumNormalBorder_1 -->
        <test-method status="PASS" signature="testGetSquareSumNormalBorder_2()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumNormalBorder_2" duration-ms="101" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumNormalBorder_2 -->
        <test-method status="PASS" signature="testGetSquareSumNormalSimple()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumNormalSimple" duration-ms="202" started-at="2016-06-23T19:10:21Z" finished-at="2016-06-23T19:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumNormalSimple -->
        <test-method status="PASS" signature="testGetSquareSumNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumNormal_1" duration-ms="201" started-at="2016-06-23T19:10:22Z" finished-at="2016-06-23T19:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumNormal_1 -->
        <test-method status="PASS" signature="testGetSquareSumNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest@46f5f779]" name="testGetSquareSumNormal_2" duration-ms="200" started-at="2016-06-23T19:10:22Z" finished-at="2016-06-23T19:10:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSquareSumNormal_2 -->
      </class> <!-- ua.goit.timonov.antMaven.module032.SquareSumWithPhaserTest -->
    </test> <!-- Integer Task Test -->
  </suite> <!-- Suite #1 -->
</testng-results>
