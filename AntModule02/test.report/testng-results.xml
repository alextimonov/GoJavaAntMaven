<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="30" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="Suite #1" duration-ms="302" started-at="2016-06-24T13:00:23Z" finished-at="2016-06-24T13:00:23Z">
    <groups>
    </groups>
    <test name="Integer Task Test" duration-ms="302" started-at="2016-06-24T13:00:23Z" finished-at="2016-06-24T13:00:23Z">
      <class name="ua.goit.timonov.antMaven.module02.NumberExecutorTest">
        <test-method status="PASS" signature="testAddTaskCatchException()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testAddTaskCatchException" duration-ms="7" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <exception class="ua.goit.timonov.antMaven.module02.ExecuteWasInvokedException">
            <message>
              <![CDATA[IntSquareTask{value=10, result=null} can't be added!]]>
            </message>
            <full-stacktrace>
              <![CDATA[ua.goit.timonov.antMaven.module02.ExecuteWasInvokedException: IntSquareTask{value=10, result=null} can't be added!
	at ua.goit.timonov.antMaven.module02.NumberExecutor.addTask(Unknown Source)
	at ua.goit.timonov.antMaven.module02.NumberExecutorTest.testAddTaskCatchException(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- ua.goit.timonov.antMaven.module02.ExecuteWasInvokedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTaskCatchException -->
        <test-method status="PASS" signature="testAddTaskNormal()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testAddTaskNormal" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTaskNormal -->
        <test-method status="PASS" signature="testExecuteInt()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testExecuteInt" duration-ms="151" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteInt -->
        <test-method status="PASS" signature="testExecuteIntWithInvalidResults()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testExecuteIntWithInvalidResults" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteIntWithInvalidResults -->
        <test-method status="PASS" signature="testExecuteLong()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testExecuteLong" duration-ms="2" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteLong -->
        <test-method status="PASS" signature="testExecuteLongWithInvalidResults()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testExecuteLongWithInvalidResults" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteLongWithInvalidResults -->
        <test-method status="PASS" signature="testGetInvalidResults()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testGetInvalidResults" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInvalidResults -->
        <test-method status="PASS" signature="testGetValidResults()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberExecutorTest@18ef96]" name="testGetValidResults" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValidResults -->
      </class> <!-- ua.goit.timonov.antMaven.module02.NumberExecutorTest -->
      <class name="ua.goit.timonov.antMaven.module02.NumberValidatorTest">
        <test-method status="PASS" signature="testIsValidNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_1" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_1 -->
        <test-method status="PASS" signature="testIsValidNormal_3()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_3" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_3 -->
        <test-method status="PASS" signature="testIsValidNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_2 -->
        <test-method status="PASS" signature="testIsValidNormal_4()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_4" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_4 -->
        <test-method status="PASS" signature="testIsValidNormal_6()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_6" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_6 -->
        <test-method status="PASS" signature="testIsValidNormal_5()[pri:0, instance:ua.goit.timonov.antMaven.module02.NumberValidatorTest@6956de9]" name="testIsValidNormal_5" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidNormal_5 -->
      </class> <!-- ua.goit.timonov.antMaven.module02.NumberValidatorTest -->
      <class name="ua.goit.timonov.antMaven.module02.LongTaskTest">
        <test-method status="PASS" signature="testExecuteCatchForException_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testExecuteCatchForException_1" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <exception class="ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException">
            <message>
              <![CDATA[Long type will be overflow through Long.MAX_VALUE]]>
            </message>
            <full-stacktrace>
              <![CDATA[ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException: Long type will be overflow through Long.MAX_VALUE
	at ua.goit.timonov.antMaven.module02.LongSquareTask.checkLongArgument(Unknown Source)
	at ua.goit.timonov.antMaven.module02.LongSquareTask.execute(Unknown Source)
	at ua.goit.timonov.antMaven.module02.LongTaskTest.testExecuteCatchForException_1(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteCatchForException_1 -->
        <test-method status="PASS" signature="testExecuteNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testExecuteNormal_1" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_1 -->
        <test-method status="PASS" signature="testExecuteCatchForException_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testExecuteCatchForException_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <exception class="ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException">
            <message>
              <![CDATA[Long type will be overflow through Long.MAX_VALUE]]>
            </message>
            <full-stacktrace>
              <![CDATA[ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException: Long type will be overflow through Long.MAX_VALUE
	at ua.goit.timonov.antMaven.module02.LongSquareTask.checkLongArgument(Unknown Source)
	at ua.goit.timonov.antMaven.module02.LongSquareTask.execute(Unknown Source)
	at ua.goit.timonov.antMaven.module02.LongTaskTest.testExecuteCatchForException_2(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteCatchForException_2 -->
        <test-method status="PASS" signature="testExecuteNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testExecuteNormal_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_2 -->
        <test-method status="PASS" signature="testExecuteNormal_3()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testExecuteNormal_3" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_3 -->
        <test-method status="PASS" signature="testGetResultNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testGetResultNormal_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_2 -->
        <test-method status="PASS" signature="testGetResultNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testGetResultNormal_1" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_1 -->
        <test-method status="PASS" signature="testGetResultNormal_3()[pri:0, instance:ua.goit.timonov.antMaven.module02.LongTaskTest@4f4a7090]" name="testGetResultNormal_3" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_3 -->
      </class> <!-- ua.goit.timonov.antMaven.module02.LongTaskTest -->
      <class name="ua.goit.timonov.antMaven.module02.IntTaskTest">
        <test-method status="PASS" signature="testExecuteCatchForException_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testExecuteCatchForException_1" duration-ms="36" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <exception class="ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException">
            <message>
              <![CDATA[Long type will be overflow through Integer.MAX_VALUE]]>
            </message>
            <full-stacktrace>
              <![CDATA[ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException: Long type will be overflow through Integer.MAX_VALUE
	at ua.goit.timonov.antMaven.module02.IntSquareTask.checkIntegerArgument(Unknown Source)
	at ua.goit.timonov.antMaven.module02.IntSquareTask.execute(Unknown Source)
	at ua.goit.timonov.antMaven.module02.IntTaskTest.testExecuteCatchForException_1(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteCatchForException_1 -->
        <test-method status="PASS" signature="testExecuteNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testExecuteNormal_1" duration-ms="7" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_1 -->
        <test-method status="PASS" signature="testExecuteCatchForException_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testExecuteCatchForException_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <exception class="ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException">
            <message>
              <![CDATA[Long type will be overflow through Integer.MAX_VALUE]]>
            </message>
            <full-stacktrace>
              <![CDATA[ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException: Long type will be overflow through Integer.MAX_VALUE
	at ua.goit.timonov.antMaven.module02.IntSquareTask.checkIntegerArgument(Unknown Source)
	at ua.goit.timonov.antMaven.module02.IntSquareTask.execute(Unknown Source)
	at ua.goit.timonov.antMaven.module02.IntTaskTest.testExecuteCatchForException_2(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.TestNG.privateMain(TestNG.java:1385)
	at org.testng.TestNG.main(TestNG.java:1354)
]]>
            </full-stacktrace>
          </exception> <!-- ua.goit.timonov.antMaven.module02.TaskOverflowDataTypeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteCatchForException_2 -->
        <test-method status="PASS" signature="testExecuteNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testExecuteNormal_2" duration-ms="1" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_2 -->
        <test-method status="PASS" signature="testExecuteNormal_3()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testExecuteNormal_3" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExecuteNormal_3 -->
        <test-method status="PASS" signature="testGetResultNormal_1()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testGetResultNormal_1" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_1 -->
        <test-method status="PASS" signature="testGetResultNormal_2()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testGetResultNormal_2" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_2 -->
        <test-method status="PASS" signature="testGetResultNormal_3()[pri:0, instance:ua.goit.timonov.antMaven.module02.IntTaskTest@5a42bbf4]" name="testGetResultNormal_3" duration-ms="0" started-at="2016-06-24T16:00:23Z" finished-at="2016-06-24T16:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResultNormal_3 -->
      </class> <!-- ua.goit.timonov.antMaven.module02.IntTaskTest -->
    </test> <!-- Integer Task Test -->
  </suite> <!-- Suite #1 -->
</testng-results>
